pipeline {

    agent any
    
    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        disableConcurrentBuilds()
        timestamps()
        ansiColor('xtrem')
    }

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')
        DOCKER_REGISTRY = "vlemi"
        TAG = "latest"
    }

    stages {

        stage('Prepare') {
            steps {
                script{

                    println("BRANCH - ${BRANCH_NAME}")
                    println("PRID - ${env.CHANGE_ID}")

                    if (BRANCH_NAME == 'master') {
                        TAG = 'latest'
                    } else {
                        TAG = env.CHANGE_ID
                    }

                    IMAGE_NAME = "${DOCKER_REGISTRY}/todo-app:${TAG}"
                }               
            }
        }

        stage('Build image') {
            when { expression { BRANCH_NAME == 'master'}}
            steps {
                sh "docker build -t ${IMAGE_NAME} ."
            }
        }
        
        stage('Login') {
            when { expression { BRANCH_NAME == 'master'}}
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW |docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }


        stage('Push image') {
            when { expression { BRANCH_NAME == 'master'}}
            steps {
                sh "docker push ${IMAGE_NAME}"
            }
        }
       
        
    }
}