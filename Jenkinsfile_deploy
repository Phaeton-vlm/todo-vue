pipeline {

    agent { label "jenkins-agent" }
    
    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        disableConcurrentBuilds()
        timestamps()
        ansiColor('xtrem')
    }

    environment {
        KIND_HOME = tool name: 'kind', type: 'com.cloudbees.jenkins.plugins.customtools.CustomTool'
        KUBECTL_HOME = tool name: 'kubectl', type: 'com.cloudbees.jenkins.plugins.customtools.CustomTool'
        EKSCTL_HOME = tool name: 'eksctl', type: 'com.cloudbees.jenkins.plugins.customtools.CustomTool'
        PATH = "${KIND_HOME}:${KUBECTL_HOME}:${EKSCTL_HOME}:${env.PATH}"
        AWS_ACCESS_KEY_ID = credentials('accessKey')
        AWS_SECRET_ACCESS_KEY = credentials('secretKey')
        KUBECONFIG = '/home/jenkins/.kube/config'
    }

    stages {
        
        stage('Test') {
            steps {
                script {
                    catchError(buildResult: 'NOT_BUILT', message: 'Cluster not found', stageResult: 'NOT_BUILT') {
                        sh """
                        aws eks update-kubeconfig --name demo-cluster
                        export KUBECONFIG=${KUBECONFIG}
                        kubectl get nodes
                        """
                    }
                }
            }
        }
        
        stage('Deploy') {
            steps {
                script {
                    catchError(buildResult: 'NOT_BUILT', message: 'Cluster not found', stageResult: 'NOT_BUILT') {
                        sh """
                        kubectl set image deployment/todoapp-s tododapp=vlemi/todo-app:0.${D_TAG}
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            emailext to: "${EMAIL}",
            subject: "Jenkins",
            body: "App updated",
            attachLog: true
        }
    } 
}